import spidev
import time
import os

Vref = 3.3
Criteria = 530
pulse_value = [0,0,0]
pulse_duration = [0.0, 0.0 , 0.0]

spi = spidev.SpiDev()
spi.open(0,0)

def ReadChannel(channel) :
    adc = spi.xfer([1,(8+channel)<<4,0])
    data = ((adc[1]&3)<<8)+adc[2]
    return data

def get_msec_tick():
    return int(round(time.time()*1000))

def Heart_Rate() :
    count = 0
    tm = 0.0
    for x in range(0,3):
        count += pulse_value[x]
        tm += pulse_duration[x]
    
    tm /=1000
    if(tm) :
        print("Heart Pulse Rate :", count*60.0/tm , "/min")

mcp3008_channel = 0
index =0
delay = 0.01
slot_index = 0
ditital =0.0

try :
    st = get_msec_tick()
    while True :
        analog_level = ReadChannel(mcp3008_channel)
        if(0 == analog_level) :
            time.sleep(delay)
            continue
        
        if((analog_level < Criteria) and (1==pulse)):
            pulse_value[slot_index]+=1
            print("pulse")
            
        if(analog_level <Criteria) :
            pulse = 0
        else:
            pulse = 1
        
        ditital = analog_level *Vref/1024.0
        
        time.sleep(delay)
        index+=1
        if(0==(index%1000)):
            et = get_msec_tick()
            pulse_duration[slot_index] =et-st
            st = et
            Heart_Rate()
            slot_index +=1
            slot_index = slot_index%3
            pulse_duration[slot_index] = 0.0
            pulse_value[slot_index] = 0

except KeyboardInterrupt:
    print ("Now Exit!")
